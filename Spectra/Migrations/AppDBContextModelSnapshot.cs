// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Spectra.Models;

namespace Spectra.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Spectra.Models.AccountAdmin", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<string>("Password");

                    b.Property<byte>("Role");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Spectra_AccountAdmin");
                });

            modelBuilder.Entity("Spectra.Models.AccountUser", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<bool?>("Gender");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Spectra_AccountUser");
                });

            modelBuilder.Entity("Spectra.Models.Agency", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("MetaDescription");

                    b.Property<string>("MetaKeyWords");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("TitleSeo");

                    b.HasKey("Id");

                    b.ToTable("Spectra_AgencySeo");
                });

            modelBuilder.Entity("Spectra.Models.Application", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId");

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Spectra_Application");
                });

            modelBuilder.Entity("Spectra.Models.Attribute", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("Spectra_Attribute");
                });

            modelBuilder.Entity("Spectra.Models.Banner", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<bool>("Status");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Spectra_Banner");
                });

            modelBuilder.Entity("Spectra.Models.Category", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<string>("MetaDescription");

                    b.Property<string>("MetaKeyWords");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<bool>("Option");

                    b.Property<bool>("Status");

                    b.Property<string>("Title");

                    b.Property<string>("TitleSeo");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Spectra_Category");
                });

            modelBuilder.Entity("Spectra.Models.CategoryNew", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("MetaDescription");

                    b.Property<string>("MetaKeyWords");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<bool>("Status");

                    b.Property<string>("TitleSeo");

                    b.HasKey("Id");

                    b.ToTable("Spectra_CategoryNew");
                });

            modelBuilder.Entity("Spectra.Models.Characteristic", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId");

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Spectra_Characteristic");
                });

            modelBuilder.Entity("Spectra.Models.CharacterList", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CharacteristicId");

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("CharacteristicId");

                    b.ToTable("Spectra_CharacterList");
                });

            modelBuilder.Entity("Spectra.Models.City", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("Spectra_City");
                });

            modelBuilder.Entity("Spectra.Models.Contact", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Note");

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("Spectra_Contact");
                });

            modelBuilder.Entity("Spectra.Models.ContactSeo", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("MetaDescription");

                    b.Property<string>("MetaKeyWords");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("TitleSeo");

                    b.HasKey("Id");

                    b.ToTable("Spectra_ContactSeo");
                });

            modelBuilder.Entity("Spectra.Models.County", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CityId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Spectra_County");
                });

            modelBuilder.Entity("Spectra.Models.ExperienceDay", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Breastpump");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Mom")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Old")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<string>("Private")
                        .IsRequired();

                    b.Property<string>("Time")
                        .IsRequired();

                    b.Property<byte>("Website");

                    b.HasKey("Id");

                    b.ToTable("Spectra_ExperienceDay");
                });

            modelBuilder.Entity("Spectra.Models.Feedback", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int?>("ProductId");

                    b.Property<float>("Rating");

                    b.Property<bool>("Status");

                    b.Property<string>("Title")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Spectra_Feedback");
                });

            modelBuilder.Entity("Spectra.Models.Gift", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<float>("Price");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("Spectra_Gift");
                });

            modelBuilder.Entity("Spectra.Models.GiftUser", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<DateTime>("BirthDay");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("LinkArticle")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("NameFacebook")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<string>("Prize")
                        .IsRequired();

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("Spectra_GiftUser");
                });

            modelBuilder.Entity("Spectra.Models.Home", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("MetaDescription");

                    b.Property<string>("MetaKeyWords");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("TitleSeo");

                    b.HasKey("Id");

                    b.ToTable("Spectra_Home");
                });

            modelBuilder.Entity("Spectra.Models.ImageProduct", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("ImageName")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int?>("ProductId");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Spectra_ImageProduct");
                });

            modelBuilder.Entity("Spectra.Models.Item", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttributeId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int?>("GiftId");

                    b.Property<string>("JobId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<float>("Price");

                    b.Property<float>("PriceAgain");

                    b.Property<int?>("ProductId");

                    b.Property<bool>("Status");

                    b.Property<int?>("ValueAttributeId");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("GiftId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ValueAttributeId");

                    b.ToTable("Spectra_Item");
                });

            modelBuilder.Entity("Spectra.Models.Location", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CityId");

                    b.Property<string>("Code");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Spectra_Location");
                });

            modelBuilder.Entity("Spectra.Models.NewsDetail", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId");

                    b.Property<int?>("CategoryNewId");

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<string>("MetaDescription");

                    b.Property<string>("MetaKeyWords");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<bool>("Status");

                    b.Property<string>("TitleSeo");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CategoryNewId");

                    b.ToTable("Spectra_NewsDetail");
                });

            modelBuilder.Entity("Spectra.Models.NewSeo", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("MetaDescription");

                    b.Property<string>("MetaKeyWords");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("TitleSeo");

                    b.HasKey("Id");

                    b.ToTable("Spectra_NewSeo");
                });

            modelBuilder.Entity("Spectra.Models.Order", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountUserId");

                    b.Property<string>("Address")
                        .HasMaxLength(250);

                    b.Property<string>("Code")
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<string>("Note");

                    b.Property<string>("PaymentMethod");

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<byte>("Status");

                    b.Property<int>("TotalAmount");

                    b.Property<int>("TotalQuantity");

                    b.Property<byte>("Website");

                    b.HasKey("Id");

                    b.HasIndex("AccountUserId");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("Spectra_Order");
                });

            modelBuilder.Entity("Spectra.Models.OrderCus", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountCusId");

                    b.Property<string>("Address")
                        .HasMaxLength(250);

                    b.Property<string>("Code")
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<string>("Note");

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<byte>("Status");

                    b.Property<int>("TotalAmount");

                    b.Property<int>("TotalQuantity");

                    b.HasKey("Id");

                    b.ToTable("Spectra_OrderCus");
                });

            modelBuilder.Entity("Spectra.Models.OrderDetail", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<float>("DiscountVoucher");

                    b.Property<string>("Gift");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int>("OrderId");

                    b.Property<float>("Price");

                    b.Property<int>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("Spectra_OrderDetail");
                });

            modelBuilder.Entity("Spectra.Models.OrderDetailCus", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Gift");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int>("OrderCusId");

                    b.Property<float>("Price");

                    b.Property<int>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("OrderCusId");

                    b.HasIndex("ProductId");

                    b.ToTable("Spectra_OrderDetailCus");
                });

            modelBuilder.Entity("Spectra.Models.PaymentInformationModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Amount");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("PaymentCode");

                    b.Property<string>("PaymentInfor");

                    b.Property<string>("Status");

                    b.Property<string>("TransactionId");

                    b.HasKey("Id");

                    b.HasIndex("PaymentCode")
                        .IsUnique()
                        .HasFilter("[PaymentCode] IS NOT NULL");

                    b.ToTable("Spectra_Payment");
                });

            modelBuilder.Entity("Spectra.Models.Policy", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("MetaDescription");

                    b.Property<string>("MetaKeyWords");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<bool>("Options");

                    b.Property<bool>("Status");

                    b.Property<string>("TitleSeo");

                    b.HasKey("Id");

                    b.ToTable("Spectra_Policy");
                });

            modelBuilder.Entity("Spectra.Models.PolicyDetail", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<int?>("PolicyId");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("PolicyId");

                    b.ToTable("Spectra_PolicyDetail");
                });

            modelBuilder.Entity("Spectra.Models.Product", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountEdit");

                    b.Property<int?>("CategoryId");

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<DateTime>("Ends");

                    b.Property<int?>("GiftId");

                    b.Property<string>("Images");

                    b.Property<string>("Information");

                    b.Property<string>("Instruct");

                    b.Property<string>("JobId");

                    b.Property<string>("MetaDescription");

                    b.Property<string>("MetaKeyWords");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<bool>("Option");

                    b.Property<float>("Price");

                    b.Property<float>("SalePrice");

                    b.Property<bool>("ScheduleStatus");

                    b.Property<DateTime>("Start");

                    b.Property<bool>("Status");

                    b.Property<string>("TitleDescription");

                    b.Property<string>("TitleSeo");

                    b.Property<int>("WarrantyMonth");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("GiftId");

                    b.ToTable("Spectra_Product");
                });

            modelBuilder.Entity("Spectra.Models.ProductSeo", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("MetaDescription");

                    b.Property<string>("MetaKeyWords");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("TitleSeo");

                    b.HasKey("Id");

                    b.ToTable("Spectra_ProductSeo");
                });

            modelBuilder.Entity("Spectra.Models.QualityAssessment", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Advise")
                        .IsRequired();

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Desire");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Expectation")
                        .IsRequired();

                    b.Property<string>("Experience")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Pack")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("Spectra_Quality_Assessment");
                });

            modelBuilder.Entity("Spectra.Models.Question", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int>("ProductId");

                    b.Property<bool>("Status");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Spectra_QuestionPro");
                });

            modelBuilder.Entity("Spectra.Models.QuestionPrize", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Name");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("Spectra_QuestionPrize");
                });

            modelBuilder.Entity("Spectra.Models.QuestionService", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int?>("ServiceDetailId");

                    b.Property<bool>("Status");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ServiceDetailId");

                    b.ToTable("Spectra_QuestionServi");
                });

            modelBuilder.Entity("Spectra.Models.RecruitmentSeo", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("MetaDescription");

                    b.Property<string>("MetaKeyWords");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("TitleSeo");

                    b.HasKey("Id");

                    b.ToTable("Spectra_RecruitmentSeo");
                });

            modelBuilder.Entity("Spectra.Models.Recrutement", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<string>("MetaDescription");

                    b.Property<string>("MetaKeyWords");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<bool>("Status");

                    b.Property<string>("TitleSeo");

                    b.HasKey("Id");

                    b.ToTable("Spectra_Recrutement");
                });

            modelBuilder.Entity("Spectra.Models.Routesr", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Component")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Path")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Spectra_Routes");
                });

            modelBuilder.Entity("Spectra.Models.SeriProduct", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CityId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime?>("DealerSaleDate");

                    b.Property<int?>("LocationId");

                    b.Property<int?>("ProductId");

                    b.Property<string>("ProductSeri");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("LocationId");

                    b.HasIndex("ProductId");

                    b.ToTable("Spectra_SeriProduct");
                });

            modelBuilder.Entity("Spectra.Models.Service", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("MetaDescription");

                    b.Property<string>("MetaKeyWords");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name");

                    b.Property<bool>("Status");

                    b.Property<string>("TitleSeo");

                    b.HasKey("Id");

                    b.ToTable("Spectra_Service");
                });

            modelBuilder.Entity("Spectra.Models.ServiceDetail", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<string>("MetaDescription");

                    b.Property<string>("MetaKeyWords");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<int?>("ServiceId");

                    b.Property<bool>("Status");

                    b.Property<string>("TitleSeo");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("Spectra_ServiceDetail");
                });

            modelBuilder.Entity("Spectra.Models.UserLanding", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<int>("Code");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email");

                    b.Property<string>("InforProduct");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Note");

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("Spectra_UserLanding");
                });

            modelBuilder.Entity("Spectra.Models.ValueAttribute", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttributeId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.ToTable("Spectra_ValueAttribute");
                });

            modelBuilder.Entity("Spectra.Models.Voucher", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Discount");

                    b.Property<string>("DiscountType");

                    b.Property<DateTime?>("EndDate");

                    b.Property<string>("JobId");

                    b.Property<int>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<bool>("ScheduleStatus");

                    b.Property<DateTime?>("StartDate");

                    b.Property<bool>("Status");

                    b.Property<string>("VoucherCode");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Spectra_Voucher");
                });

            modelBuilder.Entity("Spectra.Models.VoucherUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId");

                    b.Property<DateTime>("UsedDate");

                    b.Property<int>("VoucherId");

                    b.HasKey("Id");

                    b.HasIndex("VoucherId");

                    b.ToTable("Spectra_VoucherUsage");
                });

            modelBuilder.Entity("Spectra.Models.Warranty", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("Email");

                    b.Property<string>("Image");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<string>("Phone");

                    b.Property<string>("ProductName");

                    b.Property<string>("ProductSeri");

                    b.Property<DateTime>("StartDate");

                    b.Property<bool>("Status");

                    b.Property<string>("StoreCode");

                    b.HasKey("Id");

                    b.ToTable("Spectra_Warranty");
                });

            modelBuilder.Entity("Spectra.Models.WarrantyGold", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DateBuy");

                    b.Property<string>("Email");

                    b.Property<string>("File");

                    b.Property<float>("GtriHĐ");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<float>("PhiDVBH");

                    b.Property<string>("Phone");

                    b.Property<string>("ProductName");

                    b.Property<string>("ProductSeri");

                    b.Property<DateTime>("StartDate");

                    b.Property<byte>("Status");

                    b.HasKey("Id");

                    b.ToTable("Spectra_WarrantyGold");
                });

            modelBuilder.Entity("Spectra.Models.WarrantyGoldLog", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChangedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<float>("NewValue");

                    b.Property<float>("OldValue");

                    b.Property<string>("WarrantyContent");

                    b.Property<int?>("WarrantyGoldId");

                    b.HasKey("Id");

                    b.HasIndex("WarrantyGoldId");

                    b.ToTable("Spectra_WarrantyGold_Log");
                });

            modelBuilder.Entity("Spectra.Models.WarrantySeo", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("MetaDescription");

                    b.Property<string>("MetaKeyWords");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("TitleSeo");

                    b.HasKey("Id");

                    b.ToTable("Spectra_WarrantySeo");
                });

            modelBuilder.Entity("Spectra.Models.Welcome", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("MetaDescription");

                    b.Property<string>("MetaKeyWords");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<bool>("Status");

                    b.Property<string>("TitleSeo");

                    b.HasKey("Id");

                    b.ToTable("Spectra_Welcome");
                });

            modelBuilder.Entity("Spectra.Models.WelcomeDetail", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<string>("MetaDescription");

                    b.Property<string>("MetaKeyWords");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<bool>("Status");

                    b.Property<string>("TitleSeo");

                    b.Property<int?>("WelcomeId");

                    b.HasKey("Id");

                    b.HasIndex("WelcomeId");

                    b.ToTable("Spectra_WelcomeDetail");
                });

            modelBuilder.Entity("Spectra.Models.Application", b =>
                {
                    b.HasOne("Spectra.Models.Category", "Category")
                        .WithMany("Applications")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("Spectra.Models.Characteristic", b =>
                {
                    b.HasOne("Spectra.Models.Category", "Category")
                        .WithMany("Characteristics")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("Spectra.Models.CharacterList", b =>
                {
                    b.HasOne("Spectra.Models.Characteristic", "Characteristic")
                        .WithMany("CharacterLists")
                        .HasForeignKey("CharacteristicId");
                });

            modelBuilder.Entity("Spectra.Models.County", b =>
                {
                    b.HasOne("Spectra.Models.City", "City")
                        .WithMany("Counties")
                        .HasForeignKey("CityId");
                });

            modelBuilder.Entity("Spectra.Models.Feedback", b =>
                {
                    b.HasOne("Spectra.Models.Product", "Product")
                        .WithMany("Feedbacks")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("Spectra.Models.ImageProduct", b =>
                {
                    b.HasOne("Spectra.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("Spectra.Models.Item", b =>
                {
                    b.HasOne("Spectra.Models.Attribute", "Attribute")
                        .WithMany("Items")
                        .HasForeignKey("AttributeId");

                    b.HasOne("Spectra.Models.Gift", "Gift")
                        .WithMany("Items")
                        .HasForeignKey("GiftId");

                    b.HasOne("Spectra.Models.Product", "Product")
                        .WithMany("Items")
                        .HasForeignKey("ProductId");

                    b.HasOne("Spectra.Models.ValueAttribute", "ValueAttribute")
                        .WithMany("Items")
                        .HasForeignKey("ValueAttributeId");
                });

            modelBuilder.Entity("Spectra.Models.Location", b =>
                {
                    b.HasOne("Spectra.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");
                });

            modelBuilder.Entity("Spectra.Models.NewsDetail", b =>
                {
                    b.HasOne("Spectra.Models.Category", "Category")
                        .WithMany("NewsDetails")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Spectra.Models.CategoryNew", "CategoryNew")
                        .WithMany("NewsDetails")
                        .HasForeignKey("CategoryNewId");
                });

            modelBuilder.Entity("Spectra.Models.Order", b =>
                {
                    b.HasOne("Spectra.Models.AccountUser", "AccountUser")
                        .WithMany("orders")
                        .HasForeignKey("AccountUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Spectra.Models.OrderDetail", b =>
                {
                    b.HasOne("Spectra.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Spectra.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Spectra.Models.OrderDetailCus", b =>
                {
                    b.HasOne("Spectra.Models.OrderCus", "OrderCus")
                        .WithMany("OrderDetailCus")
                        .HasForeignKey("OrderCusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Spectra.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Spectra.Models.PolicyDetail", b =>
                {
                    b.HasOne("Spectra.Models.Policy", "Policy")
                        .WithMany("PolicyDetails")
                        .HasForeignKey("PolicyId");
                });

            modelBuilder.Entity("Spectra.Models.Product", b =>
                {
                    b.HasOne("Spectra.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Spectra.Models.Gift", "Gift")
                        .WithMany("Products")
                        .HasForeignKey("GiftId");
                });

            modelBuilder.Entity("Spectra.Models.Question", b =>
                {
                    b.HasOne("Spectra.Models.Product", "Product")
                        .WithMany("Questions")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Spectra.Models.QuestionService", b =>
                {
                    b.HasOne("Spectra.Models.ServiceDetail", "ServiceDetail")
                        .WithMany("QuestionServices")
                        .HasForeignKey("ServiceDetailId");
                });

            modelBuilder.Entity("Spectra.Models.SeriProduct", b =>
                {
                    b.HasOne("Spectra.Models.City", "City")
                        .WithMany("SeriProducts")
                        .HasForeignKey("CityId");

                    b.HasOne("Spectra.Models.Location", "Location")
                        .WithMany("SeriProducts")
                        .HasForeignKey("LocationId");

                    b.HasOne("Spectra.Models.Product", "Product")
                        .WithMany("SeriProducts")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("Spectra.Models.ServiceDetail", b =>
                {
                    b.HasOne("Spectra.Models.Service", "Service")
                        .WithMany("ServiceDetails")
                        .HasForeignKey("ServiceId");
                });

            modelBuilder.Entity("Spectra.Models.ValueAttribute", b =>
                {
                    b.HasOne("Spectra.Models.Attribute", "Attribute")
                        .WithMany("ValueAttributes")
                        .HasForeignKey("AttributeId");
                });

            modelBuilder.Entity("Spectra.Models.Voucher", b =>
                {
                    b.HasOne("Spectra.Models.Product", "Product")
                        .WithMany("Vouchers")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Spectra.Models.VoucherUsage", b =>
                {
                    b.HasOne("Spectra.Models.Voucher", "Voucher")
                        .WithMany("VoucherUsages")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Spectra.Models.WarrantyGoldLog", b =>
                {
                    b.HasOne("Spectra.Models.WarrantyGold", "WarrantyGold")
                        .WithMany("WarrantyGoldLogs")
                        .HasForeignKey("WarrantyGoldId");
                });

            modelBuilder.Entity("Spectra.Models.WelcomeDetail", b =>
                {
                    b.HasOne("Spectra.Models.Welcome", "Welcome")
                        .WithMany("WelcomeDetails")
                        .HasForeignKey("WelcomeId");
                });
#pragma warning restore 612, 618
        }
    }
}
